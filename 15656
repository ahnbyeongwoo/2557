import java.util.Arrays;
import java.util.Scanner;

public class Main {
    static int n;//4
    static int m;//2
    static boolean[] visited;//숫자 사용 여부 체크
    static int[] arr;//현재 수열 저장
    static int[] input;
    static StringBuffer sb = new StringBuffer();

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        n = sc.nextInt();
        m = sc.nextInt();
        input = new int[n];
        visited = new boolean[n + 1];//인덱스 1부터 시작하기 위해 크기를 n+1설정 == v[0]*(n+1)
        arr = new int[m];//수열 저장용 배열 생성 정답 리스트를 저장할 리스트
        for (int i = 0; i < n; i++) {
            input[i] = sc.nextInt();
        }
        Arrays.sort(input);
        backtrack(0, 1);//백트래킹 함수 호출, 초기 depth는 0
        System.out.print(sb.toString()); // 모든 출력을 한 번에 출력
    }

    public static void backtrack(int depth, int start) {//0
        if (m == depth) {//depth가 m에 도달하면 현재 수열 출력
            for (int num : arr) {//현재 수열 출력
                sb.append(num).append(" ");//정답처리
            }
            sb.append("\n");
            return;
        }
        for (int i = 0; i < n; i++) {//1부터 n까지 숫자를 순회
            if (!visited[i]) {
                //visited[i] = true;//숫자 사용 상태 갱신 1 방문상태로 변경
                arr[depth] = input[i];//현재 수열에 숫자 추가
                backtrack(depth + 1, i + 1);//다음 숫자가 현재숫자보다 큰 숫자부터 선택
                //visited[i] = false;//백트래킹 사용 상태 초기화 0
            }
        }
    }
}
